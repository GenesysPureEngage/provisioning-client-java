/*
 * Provisioning API
 * The provisioning service will be used to create objects in configuration server in a way that is consistent with the BEC model.  The \"users\" resource will be used to perform CRUD operations on config server person objects. Note that this API will extend the low level configuration server API to add additional functionality that will allow persons to be created in a way that makes them immediately useable in BEC. Operations on this resource may result in other configuration objects being modified as well. 
 *
 * OpenAPI spec version: 9.0.000.00.423
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Extension;
import io.swagger.client.model.Skill;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * UsersPut
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-06-09T19:46:39.127Z")
public class UsersPut {
  @SerializedName("changePasswordOnNextLogin")
  private Boolean changePasswordOnNextLogin = null;

  @SerializedName("emailAddress")
  private String emailAddress = null;

  @SerializedName("employeeID")
  private String employeeID = null;

  @SerializedName("externalID")
  private String externalID = null;

  @SerializedName("enabled")
  private Boolean enabled = null;

  @SerializedName("userName")
  private String userName = null;

  @SerializedName("firstName")
  private String firstName = null;

  @SerializedName("lastName")
  private String lastName = null;

  @SerializedName("loginCode")
  private String loginCode = null;

  @SerializedName("password")
  private String password = null;

  @SerializedName("multimediaPlaceName")
  private String multimediaPlaceName = null;

  @SerializedName("placeNames")
  private List<String> placeNames = new ArrayList<String>();

  @SerializedName("roles")
  private List<String> roles = new ArrayList<String>();

  @SerializedName("deletedRoles")
  private List<String> deletedRoles = new ArrayList<String>();

  @SerializedName("switchNames")
  private List<String> switchNames = new ArrayList<String>();

  @SerializedName("deletedSwitchNames")
  private List<String> deletedSwitchNames = new ArrayList<String>();

  @SerializedName("phones")
  private List<Extension> phones = new ArrayList<Extension>();

  @SerializedName("supportSoftPhone")
  private Boolean supportSoftPhone = null;

  /**
   * Specifies the sip phone typed if supportSoftPhone = true.  Effect: Specifies  the sip phone type and corresponding annex to be written to the DN's \"TServer\" section 
   */
  public enum SipPhoneTypeEnum {
    @SerializedName("Disable CTI")
    CTI("Disable CTI");

    private String value;

    SipPhoneTypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("sipPhoneType")
  private SipPhoneTypeEnum sipPhoneType = null;

  @SerializedName("skills")
  private List<Skill> skills = new ArrayList<Skill>();

  @SerializedName("deletedSkills")
  private List<String> deletedSkills = new ArrayList<String>();

  @SerializedName("agentGroups")
  private List<String> agentGroups = new ArrayList<String>();

  @SerializedName("deletedAgentGroups")
  private List<String> deletedAgentGroups = new ArrayList<String>();

  @SerializedName("accessGroups")
  private List<String> accessGroups = new ArrayList<String>();

  @SerializedName("deletedAccessGroups")
  private List<String> deletedAccessGroups = new ArrayList<String>();

  @SerializedName("voiceMail")
  private BigDecimal voiceMail = null;

  @SerializedName("wrapUpTime")
  private String wrapUpTime = null;

  public UsersPut changePasswordOnNextLogin(Boolean changePasswordOnNextLogin) {
    this.changePasswordOnNextLogin = changePasswordOnNextLogin;
    return this;
  }

   /**
   * if 'true', user will be asked to change password on first login.  Effect: Controls the value of the corresponding CfgPerson attribute 
   * @return changePasswordOnNextLogin
  **/
  @ApiModelProperty(example = "null", value = "if 'true', user will be asked to change password on first login.  Effect: Controls the value of the corresponding CfgPerson attribute ")
  public Boolean getChangePasswordOnNextLogin() {
    return changePasswordOnNextLogin;
  }

  public void setChangePasswordOnNextLogin(Boolean changePasswordOnNextLogin) {
    this.changePasswordOnNextLogin = changePasswordOnNextLogin;
  }

  public UsersPut emailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
    return this;
  }

   /**
   * User's email.  Effect: Controls the value of the corresponding CfgPerson attribute 
   * @return emailAddress
  **/
  @ApiModelProperty(example = "null", value = "User's email.  Effect: Controls the value of the corresponding CfgPerson attribute ")
  public String getEmailAddress() {
    return emailAddress;
  }

  public void setEmailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
  }

  public UsersPut employeeID(String employeeID) {
    this.employeeID = employeeID;
    return this;
  }

   /**
   * user's Employee ID.  Effect: Controls the value of the corresponding CfgPerson attribute 
   * @return employeeID
  **/
  @ApiModelProperty(example = "null", value = "user's Employee ID.  Effect: Controls the value of the corresponding CfgPerson attribute ")
  public String getEmployeeID() {
    return employeeID;
  }

  public void setEmployeeID(String employeeID) {
    this.employeeID = employeeID;
  }

  public UsersPut externalID(String externalID) {
    this.externalID = externalID;
    return this;
  }

   /**
   * External ID.  Effect: Controls the value of the corresponding CfgPerson attribute 
   * @return externalID
  **/
  @ApiModelProperty(example = "null", value = "External ID.  Effect: Controls the value of the corresponding CfgPerson attribute ")
  public String getExternalID() {
    return externalID;
  }

  public void setExternalID(String externalID) {
    this.externalID = externalID;
  }

  public UsersPut enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * User is enabled or disabled.  Effect: Controls the value of the corresponding CfgPerson attribute 
   * @return enabled
  **/
  @ApiModelProperty(example = "null", value = "User is enabled or disabled.  Effect: Controls the value of the corresponding CfgPerson attribute ")
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public UsersPut userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * User unique login. Controls the value of the corresponding CfgPerson attribute 
   * @return userName
  **/
  @ApiModelProperty(example = "null", required = true, value = "User unique login. Controls the value of the corresponding CfgPerson attribute ")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }

  public UsersPut firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * User's first name.  Effect: Controls the value of the corresponding CfgPerson attribute 
   * @return firstName
  **/
  @ApiModelProperty(example = "null", required = true, value = "User's first name.  Effect: Controls the value of the corresponding CfgPerson attribute ")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public UsersPut lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * User's last name.  Effect: Controls the value of the corresponding CfgPerson attribute 
   * @return lastName
  **/
  @ApiModelProperty(example = "null", required = true, value = "User's last name.  Effect: Controls the value of the corresponding CfgPerson attribute ")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public UsersPut loginCode(String loginCode) {
    this.loginCode = loginCode;
    return this;
  }

   /**
   * The user's login code.  Effect: A corresponding CfgAgentLogin will be created on all switches in the \"switchNames\" collection. It will then be assigned to the CfgPerson that's being modified. 
   * @return loginCode
  **/
  @ApiModelProperty(example = "null", value = "The user's login code.  Effect: A corresponding CfgAgentLogin will be created on all switches in the \"switchNames\" collection. It will then be assigned to the CfgPerson that's being modified. ")
  public String getLoginCode() {
    return loginCode;
  }

  public void setLoginCode(String loginCode) {
    this.loginCode = loginCode;
  }

  public UsersPut password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Password as plain text.  Effect: Controls the value of the corresponding CfgPerson attribute 
   * @return password
  **/
  @ApiModelProperty(example = "null", required = true, value = "Password as plain text.  Effect: Controls the value of the corresponding CfgPerson attribute ")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public UsersPut multimediaPlaceName(String multimediaPlaceName) {
    this.multimediaPlaceName = multimediaPlaceName;
    return this;
  }

   /**
   * Place name for multimedia-only agents. 
   * @return multimediaPlaceName
  **/
  @ApiModelProperty(example = "null", value = "Place name for multimedia-only agents. ")
  public String getMultimediaPlaceName() {
    return multimediaPlaceName;
  }

  public void setMultimediaPlaceName(String multimediaPlaceName) {
    this.multimediaPlaceName = multimediaPlaceName;
  }

  public UsersPut placeNames(List<String> placeNames) {
    this.placeNames = placeNames;
    return this;
  }

  public UsersPut addPlaceNamesItem(String placeNamesItem) {
    this.placeNames.add(placeNamesItem);
    return this;
  }

   /**
   * A list of places available to the user (for multimedia only users).  Effect: The list is written to the current CfgPerson's \"htcc\" annex. e.g. CfgPerson/userProperties/htcc/place = p1, p2, p3 
   * @return placeNames
  **/
  @ApiModelProperty(example = "null", value = "A list of places available to the user (for multimedia only users).  Effect: The list is written to the current CfgPerson's \"htcc\" annex. e.g. CfgPerson/userProperties/htcc/place = p1, p2, p3 ")
  public List<String> getPlaceNames() {
    return placeNames;
  }

  public void setPlaceNames(List<String> placeNames) {
    this.placeNames = placeNames;
  }

  public UsersPut roles(List<String> roles) {
    this.roles = roles;
    return this;
  }

  public UsersPut addRolesItem(String rolesItem) {
    this.roles.add(rolesItem);
    return this;
  }

   /**
   * The roles that will be added to the user. 
   * @return roles
  **/
  @ApiModelProperty(example = "null", value = "The roles that will be added to the user. ")
  public List<String> getRoles() {
    return roles;
  }

  public void setRoles(List<String> roles) {
    this.roles = roles;
  }

  public UsersPut deletedRoles(List<String> deletedRoles) {
    this.deletedRoles = deletedRoles;
    return this;
  }

  public UsersPut addDeletedRolesItem(String deletedRolesItem) {
    this.deletedRoles.add(deletedRolesItem);
    return this;
  }

   /**
   * The roles that will be removed from the user. 
   * @return deletedRoles
  **/
  @ApiModelProperty(example = "null", value = "The roles that will be removed from the user. ")
  public List<String> getDeletedRoles() {
    return deletedRoles;
  }

  public void setDeletedRoles(List<String> deletedRoles) {
    this.deletedRoles = deletedRoles;
  }

  public UsersPut switchNames(List<String> switchNames) {
    this.switchNames = switchNames;
    return this;
  }

  public UsersPut addSwitchNamesItem(String switchNamesItem) {
    this.switchNames.add(switchNamesItem);
    return this;
  }

   /**
   * The switch names that the user will work on.  Effect: A list of switches where the user's telephony objects will be created (i.e. dns, agent logins) 
   * @return switchNames
  **/
  @ApiModelProperty(example = "null", value = "The switch names that the user will work on.  Effect: A list of switches where the user's telephony objects will be created (i.e. dns, agent logins) ")
  public List<String> getSwitchNames() {
    return switchNames;
  }

  public void setSwitchNames(List<String> switchNames) {
    this.switchNames = switchNames;
  }

  public UsersPut deletedSwitchNames(List<String> deletedSwitchNames) {
    this.deletedSwitchNames = deletedSwitchNames;
    return this;
  }

  public UsersPut addDeletedSwitchNamesItem(String deletedSwitchNamesItem) {
    this.deletedSwitchNames.add(deletedSwitchNamesItem);
    return this;
  }

   /**
   * The switch names that the user will NOT work on.  Effect: A list of switches where the user's telephony objects will NOT be created (i.e. dns, agent logins) 
   * @return deletedSwitchNames
  **/
  @ApiModelProperty(example = "null", value = "The switch names that the user will NOT work on.  Effect: A list of switches where the user's telephony objects will NOT be created (i.e. dns, agent logins) ")
  public List<String> getDeletedSwitchNames() {
    return deletedSwitchNames;
  }

  public void setDeletedSwitchNames(List<String> deletedSwitchNames) {
    this.deletedSwitchNames = deletedSwitchNames;
  }

  public UsersPut phones(List<Extension> phones) {
    this.phones = phones;
    return this;
  }

  public UsersPut addPhonesItem(Extension phonesItem) {
    this.phones.add(phonesItem);
    return this;
  }

   /**
   * A list of phone number descriptors used to create the user's DNs.  Effect: For each phone number, a corresponding DN will be created on all of the switches specified by \"switchNames\" and assigned to the specified place. 
   * @return phones
  **/
  @ApiModelProperty(example = "null", value = "A list of phone number descriptors used to create the user's DNs.  Effect: For each phone number, a corresponding DN will be created on all of the switches specified by \"switchNames\" and assigned to the specified place. ")
  public List<Extension> getPhones() {
    return phones;
  }

  public void setPhones(List<Extension> phones) {
    this.phones = phones;
  }

  public UsersPut supportSoftPhone(Boolean supportSoftPhone) {
    this.supportSoftPhone = supportSoftPhone;
    return this;
  }

   /**
   * Enable SIP Phone, true/false.  Effect: Writes corresponding information to the TServer annex of the created DNs (see sipPhoneType) 
   * @return supportSoftPhone
  **/
  @ApiModelProperty(example = "null", value = "Enable SIP Phone, true/false.  Effect: Writes corresponding information to the TServer annex of the created DNs (see sipPhoneType) ")
  public Boolean getSupportSoftPhone() {
    return supportSoftPhone;
  }

  public void setSupportSoftPhone(Boolean supportSoftPhone) {
    this.supportSoftPhone = supportSoftPhone;
  }

  public UsersPut sipPhoneType(SipPhoneTypeEnum sipPhoneType) {
    this.sipPhoneType = sipPhoneType;
    return this;
  }

   /**
   * Specifies the sip phone typed if supportSoftPhone = true.  Effect: Specifies  the sip phone type and corresponding annex to be written to the DN's \"TServer\" section 
   * @return sipPhoneType
  **/
  @ApiModelProperty(example = "null", value = "Specifies the sip phone typed if supportSoftPhone = true.  Effect: Specifies  the sip phone type and corresponding annex to be written to the DN's \"TServer\" section ")
  public SipPhoneTypeEnum getSipPhoneType() {
    return sipPhoneType;
  }

  public void setSipPhoneType(SipPhoneTypeEnum sipPhoneType) {
    this.sipPhoneType = sipPhoneType;
  }

  public UsersPut skills(List<Skill> skills) {
    this.skills = skills;
    return this;
  }

  public UsersPut addSkillsItem(Skill skillsItem) {
    this.skills.add(skillsItem);
    return this;
  }

   /**
   * List of Skills to assign to the user.  Effect: The list contains a collection of skill descriptors. If the corresponding skill is found, it is assigned to the user with the specified level. If it is not found, the skill is created and then assigned. 
   * @return skills
  **/
  @ApiModelProperty(example = "null", value = "List of Skills to assign to the user.  Effect: The list contains a collection of skill descriptors. If the corresponding skill is found, it is assigned to the user with the specified level. If it is not found, the skill is created and then assigned. ")
  public List<Skill> getSkills() {
    return skills;
  }

  public void setSkills(List<Skill> skills) {
    this.skills = skills;
  }

  public UsersPut deletedSkills(List<String> deletedSkills) {
    this.deletedSkills = deletedSkills;
    return this;
  }

  public UsersPut addDeletedSkillsItem(String deletedSkillsItem) {
    this.deletedSkills.add(deletedSkillsItem);
    return this;
  }

   /**
   * List of Skills to delete from the user.  Effect: The list contains a collection of skill names. If the corresponding skill is found, it is deleted from the user. 
   * @return deletedSkills
  **/
  @ApiModelProperty(example = "null", value = "List of Skills to delete from the user.  Effect: The list contains a collection of skill names. If the corresponding skill is found, it is deleted from the user. ")
  public List<String> getDeletedSkills() {
    return deletedSkills;
  }

  public void setDeletedSkills(List<String> deletedSkills) {
    this.deletedSkills = deletedSkills;
  }

  public UsersPut agentGroups(List<String> agentGroups) {
    this.agentGroups = agentGroups;
    return this;
  }

  public UsersPut addAgentGroupsItem(String agentGroupsItem) {
    this.agentGroups.add(agentGroupsItem);
    return this;
  }

   /**
   * List of agent groups that the user should be assigned to.  Effect: The user will be assigned to each group that already exists. If a particular group is not already in the system it will be created. 
   * @return agentGroups
  **/
  @ApiModelProperty(example = "null", value = "List of agent groups that the user should be assigned to.  Effect: The user will be assigned to each group that already exists. If a particular group is not already in the system it will be created. ")
  public List<String> getAgentGroups() {
    return agentGroups;
  }

  public void setAgentGroups(List<String> agentGroups) {
    this.agentGroups = agentGroups;
  }

  public UsersPut deletedAgentGroups(List<String> deletedAgentGroups) {
    this.deletedAgentGroups = deletedAgentGroups;
    return this;
  }

  public UsersPut addDeletedAgentGroupsItem(String deletedAgentGroupsItem) {
    this.deletedAgentGroups.add(deletedAgentGroupsItem);
    return this;
  }

   /**
   * List of agent groups that the user should be deleted from.  Effect: The user will be deleted from each group that already exists. 
   * @return deletedAgentGroups
  **/
  @ApiModelProperty(example = "null", value = "List of agent groups that the user should be deleted from.  Effect: The user will be deleted from each group that already exists. ")
  public List<String> getDeletedAgentGroups() {
    return deletedAgentGroups;
  }

  public void setDeletedAgentGroups(List<String> deletedAgentGroups) {
    this.deletedAgentGroups = deletedAgentGroups;
  }

  public UsersPut accessGroups(List<String> accessGroups) {
    this.accessGroups = accessGroups;
    return this;
  }

  public UsersPut addAccessGroupsItem(String accessGroupsItem) {
    this.accessGroups.add(accessGroupsItem);
    return this;
  }

   /**
   * List of access groups that the user should belong to.  Effect: The user will be assigned to each group that can be located. If a group does not already exist, it will NOT be created. 
   * @return accessGroups
  **/
  @ApiModelProperty(example = "null", value = "List of access groups that the user should belong to.  Effect: The user will be assigned to each group that can be located. If a group does not already exist, it will NOT be created. ")
  public List<String> getAccessGroups() {
    return accessGroups;
  }

  public void setAccessGroups(List<String> accessGroups) {
    this.accessGroups = accessGroups;
  }

  public UsersPut deletedAccessGroups(List<String> deletedAccessGroups) {
    this.deletedAccessGroups = deletedAccessGroups;
    return this;
  }

  public UsersPut addDeletedAccessGroupsItem(String deletedAccessGroupsItem) {
    this.deletedAccessGroups.add(deletedAccessGroupsItem);
    return this;
  }

   /**
   * List of access groups that the user should be deleted from.  Effect: The user will be deleted from each group that can be located. 
   * @return deletedAccessGroups
  **/
  @ApiModelProperty(example = "null", value = "List of access groups that the user should be deleted from.  Effect: The user will be deleted from each group that can be located. ")
  public List<String> getDeletedAccessGroups() {
    return deletedAccessGroups;
  }

  public void setDeletedAccessGroups(List<String> deletedAccessGroups) {
    this.deletedAccessGroups = deletedAccessGroups;
  }

  public UsersPut voiceMail(BigDecimal voiceMail) {
    this.voiceMail = voiceMail;
    return this;
  }

   /**
   * User's Voice Mail.  Effect: Written to the user's CfgAgentLogin.userProperties.TServer.gvm_mailbox 
   * @return voiceMail
  **/
  @ApiModelProperty(example = "null", value = "User's Voice Mail.  Effect: Written to the user's CfgAgentLogin.userProperties.TServer.gvm_mailbox ")
  public BigDecimal getVoiceMail() {
    return voiceMail;
  }

  public void setVoiceMail(BigDecimal voiceMail) {
    this.voiceMail = voiceMail;
  }

  public UsersPut wrapUpTime(String wrapUpTime) {
    this.wrapUpTime = wrapUpTime;
    return this;
  }

   /**
   * User's Wrap Up Time.  Effect: Configured for each CfgAgentLogin 
   * @return wrapUpTime
  **/
  @ApiModelProperty(example = "null", value = "User's Wrap Up Time.  Effect: Configured for each CfgAgentLogin ")
  public String getWrapUpTime() {
    return wrapUpTime;
  }

  public void setWrapUpTime(String wrapUpTime) {
    this.wrapUpTime = wrapUpTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsersPut usersPut = (UsersPut) o;
    return Objects.equals(this.changePasswordOnNextLogin, usersPut.changePasswordOnNextLogin) &&
        Objects.equals(this.emailAddress, usersPut.emailAddress) &&
        Objects.equals(this.employeeID, usersPut.employeeID) &&
        Objects.equals(this.externalID, usersPut.externalID) &&
        Objects.equals(this.enabled, usersPut.enabled) &&
        Objects.equals(this.userName, usersPut.userName) &&
        Objects.equals(this.firstName, usersPut.firstName) &&
        Objects.equals(this.lastName, usersPut.lastName) &&
        Objects.equals(this.loginCode, usersPut.loginCode) &&
        Objects.equals(this.password, usersPut.password) &&
        Objects.equals(this.multimediaPlaceName, usersPut.multimediaPlaceName) &&
        Objects.equals(this.placeNames, usersPut.placeNames) &&
        Objects.equals(this.roles, usersPut.roles) &&
        Objects.equals(this.deletedRoles, usersPut.deletedRoles) &&
        Objects.equals(this.switchNames, usersPut.switchNames) &&
        Objects.equals(this.deletedSwitchNames, usersPut.deletedSwitchNames) &&
        Objects.equals(this.phones, usersPut.phones) &&
        Objects.equals(this.supportSoftPhone, usersPut.supportSoftPhone) &&
        Objects.equals(this.sipPhoneType, usersPut.sipPhoneType) &&
        Objects.equals(this.skills, usersPut.skills) &&
        Objects.equals(this.deletedSkills, usersPut.deletedSkills) &&
        Objects.equals(this.agentGroups, usersPut.agentGroups) &&
        Objects.equals(this.deletedAgentGroups, usersPut.deletedAgentGroups) &&
        Objects.equals(this.accessGroups, usersPut.accessGroups) &&
        Objects.equals(this.deletedAccessGroups, usersPut.deletedAccessGroups) &&
        Objects.equals(this.voiceMail, usersPut.voiceMail) &&
        Objects.equals(this.wrapUpTime, usersPut.wrapUpTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(changePasswordOnNextLogin, emailAddress, employeeID, externalID, enabled, userName, firstName, lastName, loginCode, password, multimediaPlaceName, placeNames, roles, deletedRoles, switchNames, deletedSwitchNames, phones, supportSoftPhone, sipPhoneType, skills, deletedSkills, agentGroups, deletedAgentGroups, accessGroups, deletedAccessGroups, voiceMail, wrapUpTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsersPut {\n");
    
    sb.append("    changePasswordOnNextLogin: ").append(toIndentedString(changePasswordOnNextLogin)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    employeeID: ").append(toIndentedString(employeeID)).append("\n");
    sb.append("    externalID: ").append(toIndentedString(externalID)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    loginCode: ").append(toIndentedString(loginCode)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    multimediaPlaceName: ").append(toIndentedString(multimediaPlaceName)).append("\n");
    sb.append("    placeNames: ").append(toIndentedString(placeNames)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    deletedRoles: ").append(toIndentedString(deletedRoles)).append("\n");
    sb.append("    switchNames: ").append(toIndentedString(switchNames)).append("\n");
    sb.append("    deletedSwitchNames: ").append(toIndentedString(deletedSwitchNames)).append("\n");
    sb.append("    phones: ").append(toIndentedString(phones)).append("\n");
    sb.append("    supportSoftPhone: ").append(toIndentedString(supportSoftPhone)).append("\n");
    sb.append("    sipPhoneType: ").append(toIndentedString(sipPhoneType)).append("\n");
    sb.append("    skills: ").append(toIndentedString(skills)).append("\n");
    sb.append("    deletedSkills: ").append(toIndentedString(deletedSkills)).append("\n");
    sb.append("    agentGroups: ").append(toIndentedString(agentGroups)).append("\n");
    sb.append("    deletedAgentGroups: ").append(toIndentedString(deletedAgentGroups)).append("\n");
    sb.append("    accessGroups: ").append(toIndentedString(accessGroups)).append("\n");
    sb.append("    deletedAccessGroups: ").append(toIndentedString(deletedAccessGroups)).append("\n");
    sb.append("    voiceMail: ").append(toIndentedString(voiceMail)).append("\n");
    sb.append("    wrapUpTime: ").append(toIndentedString(wrapUpTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

